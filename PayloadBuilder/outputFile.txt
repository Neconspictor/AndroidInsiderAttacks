unsigned char jniPayload[] = {
0x57,  // push edi
0x56,  // push esi
0x55,  // push ebp
0x83, 0xC4, 0xE4,  // add esp, -28
0x50,  // push eax
0xC7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00,  // mov [esp + 8], 1
0x64, 0x8B, 0x0D, 0xC4, 0x00, 0x00, 0x00,  // mov ecx, fs:[0xc4]  ; top_handle_scope
0x89, 0x4C, 0x24, 0x04,  // mov [esp + 4], ecx
0x8D, 0x4C, 0x24, 0x04,  // lea ecx, [esp + 4]
0x64, 0x89, 0x0D, 0xC4, 0x00, 0x00, 0x00,  // mov fs:[0xc4], ecx  ; top_handle_scope
0x8B, 0x08,  // mov ecx, [eax]
0x89, 0x4C, 0x24, 0x0C,  // mov [esp + 12], ecx
0x64, 0x89, 0x25, 0x8C, 0x00, 0x00, 0x00,  // mov fs:[0x8c], esp  ; top_quick_frame_method
0x83, 0xC4, 0xF0,  // add esp, -16
0x64, 0x8B, 0x0D, 0x34, 0x00, 0x00, 0x00,  // mov ecx, fs:[0x34]  ; 52
0x85, 0xC9,  // test ecx, ecx
0x0F, 0x84, 0x19, 0x00, 0x00, 0x00,  // jz/eq +25 (0x000012cd)
0x8D, 0x4C, 0x24, 0x1C,  // lea ecx, [esp + 28]
0x89, 0x0C, 0x24,  // mov [esp], ecx
0x64, 0x8B, 0x0D, 0xA4, 0x00, 0x00, 0x00,  // mov ecx, fs:[0xa4]  ; self
0x89, 0x4C, 0x24, 0x04,  // mov [esp + 4], ecx
0x64, 0xFF, 0x15, 0x1C, 0x03, 0x00, 0x00,  // call fs:[0x31c]  ; pReadBarrierJni
0x64, 0x8B, 0x0D, 0xA4, 0x00, 0x00, 0x00,  // mov ecx, fs:[0xa4]  ; self
0x89, 0x0C, 0x24,  // mov [esp], ecx
0x64, 0xFF, 0x15, 0xC4, 0x01, 0x00, 0x00,  // call fs:[0x1c4]  ; pJniMethodStart
0x89, 0x44, 0x24, 0x20,  // mov [esp + 32], eax
0x8D, 0x4C, 0x24, 0x1C,  // lea ecx, [esp + 28]
0x89, 0x4C, 0x24, 0x04,  // mov [esp + 4], ecx
0x64, 0x8B, 0x0D, 0x9C, 0x00, 0x00, 0x00,  // mov ecx, fs:[0x9c]  ; jni_env
0x89, 0x0C, 0x24,  // mov [esp], ecx
0x8B, 0x4C, 0x24, 0x10,  // mov ecx, [esp + 16]
0xFF, 0x51, 0x18,  // call [ecx + 24]
0x8B, 0x4C, 0x24, 0x20,  // mov ecx, [esp + 32]
0x89, 0x0C, 0x24,  // mov [esp], ecx
0x64, 0x8B, 0x0D, 0xA4, 0x00, 0x00, 0x00,  // mov ecx, fs:[0xa4]  ; self
0x89, 0x4C, 0x24, 0x04,  // mov [esp + 4], ecx
0x64, 0xFF, 0x15, 0xD0, 0x01, 0x00, 0x00,  // call fs:[0x1d0]  ; pJniMethodEnd
0x83, 0xC4, 0x10,  // add esp, 16
0x64, 0x83, 0x3D, 0x84, 0x00, 0x00, 0x00, 0x00,  // cmp fs:[0x84], 0  ; exception
0x0F, 0x85, 0x07, 0x00, 0x00, 0x00,  // jnz/ne +7 (0x0000132c)
0x83, 0xC4, 0x20,  // add esp, 32
0x5D,  // pop ebp
0x5E,  // pop esi
0x5F,  // pop edi
0xC3,  // ret
0x64, 0x8B, 0x05, 0x84, 0x00, 0x00, 0x00,  // mov eax, fs:[0x84]  ; exception
0x64, 0xFF, 0x15, 0xB8, 0x02, 0x00, 0x00,  // call fs:[0x2b8]  ; pDeliverException
0xCC,  // int 3

};
